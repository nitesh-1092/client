{"version":3,"sources":["actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/ForgotPassReducer.js","reducers/index.js","reducers/ThemeOptions.js","store.js","serviceWorker.js","index.js","reducers/actionTypes.js"],"names":["GET_ERRORS","USER_LOADING","SET_CURRENT_USER","isEmpty","require","initialState","isAuthenticated","user","loading","otp","currentTime","username","id","token","gmailId","facebookId","count","fcount","combineReducers","auth","state","action","type","payload","errors","actionTypes","myCount","otptime","ThemeOptions","sidebarShadow","sidebarFixed","sidebarToggleMobile","headerFixed","headerShadow","footerFixed","footerShadow","peristedState","serializedState","localStorage","getItem","JSON","parse","e","loadState","store","thunk","createStore","rootReducer","subscribe","stringify","setItem","saveState","getState","Boolean","window","location","hostname","match","rout","lazy","hist","createBrowserHistory","console","log","ReactDOM","render","history","fallback","className","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","ADD_USER","LOGOUT_USER","SET_OTP","RESET_OTP","UPDATE_COUNT","FINAL_COUNT"],"mappings":"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","file":"static/js/main.5942e32f.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from './actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    otp:'',\r\n    currentTime:'',\r\n    username:'',\r\n};\r\n\r\nexport default function ForgotPassTeducer(state = initialState, action) {\r\n    switch(action.type){\r\n\r\n        case actionTypes.SET_OTP:\r\n          var otptime = action.payload;\r\n          state.otp = otptime.otp;\r\n          state.currentTime = otptime.currentTime;\r\n          state.username = otptime.username;\r\n          return state;\r\n          \r\n        case actionTypes.RESET_OTP:\r\n            state.otp = '';\r\n            state.currentTime = '';\r\n            state.username = '';\r\n            return state;\r\n        \r\n        \r\n\r\n        default: return state;\r\n    \r\n      }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport ThemeOptions from './ThemeOptions';\r\nimport * as actionTypes from './actionTypes';\r\nimport ForgotPassReducer from './ForgotPassReducer';\r\n\r\nconst initialState = {\r\n  id:'',\r\n  token:'',\r\n  gmailId:'',\r\n  facebookId:'',\r\n  count:0,\r\n  fcount:19\r\n};\r\n\r\n\r\n\r\nconst userReducer = (state = initialState, action) =>{\r\n  \r\n  switch(action.type){\r\n\r\n    case actionTypes.ADD_USER:\r\n        var user = action.payload;\r\n        state.id = user.id;\r\n        state.token = user.token;\r\n        state.gmailId = user.gmailId;\r\n        state.facebookId = user.facebookId;\r\n        return state;\r\n   \r\n      case actionTypes.LOGOUT_USER:\r\n        state.id = '';\r\n        state.token = '';\r\n        state.gmailId = '';\r\n        state.facebookId = '';\r\n        return state;\r\n\r\n      case actionTypes.UPDATE_COUNT:\r\n        var myCount = action.payload;\r\n        state.count = myCount.count;\r\n        return state;\r\n      case actionTypes.FINAL_COUNT:\r\n        var myCount = action.payload;\r\n        state.fcount = myCount.count;\r\n        return state;\r\n\r\n    default: return state;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  user:userReducer,\r\n  otptime:ForgotPassReducer,\r\n  ThemeOptions\r\n});\r\n\r\n\r\n","// Sidebar\n\nexport const SET_SIDEBAR_SHADOW = 'THEME_OPTIONS/SET_SIDEBAR_SHADOW';\nexport const SET_SIDEBAR_TOGGLE_MOBILE =\n  'THEME_OPTIONS/SET_SIDEBAR_TOGGLE_MOBILE';\nexport const SET_SIDEBAR_FIXED = 'THEME_OPTIONS/SET_SIDEBAR_FIXED';\n\nexport const setSidebarShadow = sidebarShadow => ({\n  type: SET_SIDEBAR_SHADOW,\n  sidebarShadow\n});\nexport const setSidebarFixed = sidebarFixed => ({\n  type: SET_SIDEBAR_FIXED,\n  sidebarFixed\n});\nexport const setSidebarToggleMobile = sidebarToggleMobile => ({\n  type: SET_SIDEBAR_TOGGLE_MOBILE,\n  sidebarToggleMobile\n});\n// Header\n\nexport const SET_HEADER_FIXED = 'THEME_OPTIONS/SET_HEADER_FIXED';\nexport const SET_HEADER_SHADOW = 'THEME_OPTIONS/SET_HEADER_SHADOW';\nexport const SET_HEADER_SEARCH_HOVER = 'THEME_OPTIONS/SET_HEADER_SEARCH_HOVER';\n\nexport const setHeaderFixed = headerFixed => ({\n  type: SET_HEADER_FIXED,\n  headerFixed\n});\nexport const setHeaderShadow = headerShadow => ({\n  type: SET_HEADER_SHADOW,\n  headerShadow\n});\nexport const setHeaderSearchHover = headerSearchHover => ({\n  type: SET_HEADER_SEARCH_HOVER,\n  headerSearchHover\n});\n// Footer\n\nexport const SET_FOOTER_FIXED = 'THEME_OPTIONS/SET_FOOTER_FIXED';\nexport const setFooterFixed = footerFixed => ({\n  type: SET_FOOTER_FIXED,\n  footerFixed\n});\nexport default function reducer(\n  state = {\n    // Sidebar\n\n    sidebarShadow: false,\n    sidebarFixed: true,\n    sidebarToggleMobile: false,\n    // Header\n\n    headerFixed: true,\n    headerShadow: true,\n    // Footer\n\n    footerFixed: false,\n    footerShadow: false\n  },\n  action\n) {\n  switch (action.type) {\n    // Sidebar\n\n    case SET_SIDEBAR_SHADOW:\n      return {\n        ...state,\n        sidebarShadow: action.sidebarShadow\n      };\n    case SET_SIDEBAR_FIXED:\n      return {\n        ...state,\n        sidebarFixed: action.sidebarFixed\n      };\n    case SET_SIDEBAR_TOGGLE_MOBILE:\n      return {\n        ...state,\n        sidebarToggleMobile: action.sidebarToggleMobile\n      };\n    // Header\n\n    case SET_HEADER_FIXED:\n      return {\n        ...state,\n        headerFixed: action.headerFixed\n      };\n    case SET_HEADER_SHADOW:\n      return {\n        ...state,\n        headerShadow: action.headerShadow\n      };\n    // Footer\n\n    case SET_FOOTER_FIXED:\n      return {\n        ...state,\n        footerFixed: action.footerFixed\n      };\n    default:\n      break;\n  }\n  return state;\n}\n","import { createStore, applyMiddleware, compose, composeWithDevTools } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n//import { combineReducers } from \"redux\";\r\n\r\n\r\nconst initialState = {\r\n};\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if(serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (e) {\r\n    // Ignore write errors;\r\n  }\r\n};\r\n\r\nconst peristedState = loadState();\r\n\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n   peristedState\r\n  );\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, {Suspense, lazy} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css'\r\nimport './index.css';\r\nimport \"./components/assets/css/material-dashboard-react.css?v=1.9.0\";\r\nimport { Switch, Route, Router, Redirect} from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport store from \"./store\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nconst rout = lazy(() => import('./routes'))\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nstore.subscribe(()=>{\r\n  console.log(store.getState(), \"$$$$\")\r\n})\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <Router history={hist}>\r\n    <Switch>\r\n    <Suspense\r\n      fallback={\r\n        <div className=\"d-flex align-items-center vh-100 justify-content-center text-center font-weight-bold font-size-lg py-3\">\r\n          <div className=\"w-50 mx-auto\">\r\n            Please wait while we load CT-Online for you....\r\n          </div>\r\n        </div>\r\n      }>\r\n      <Route path=\"/\" component={rout} />      \r\n    </Suspense>\r\n    </Switch>\r\n  </Router>\r\n</Provider>\r\n,document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();","export const ADD_USER = 'ADD_USER';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const SET_OTP = 'SET_OTP';\r\nexport const RESET_OTP = 'RESET_OTP';\r\nexport const UPDATE_COUNT = 'UPDATE_COUNT';\r\nexport const FINAL_COUNT = 'FINAL_COUNT';"],"sourceRoot":""}